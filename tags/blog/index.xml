<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on CyberBored Blog</title>
    <link>https://cyberbored.site/tags/blog/</link>
    <description>Recent content in Blog on CyberBored Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>CyberBored, Inc. Copyright</copyright>
    <lastBuildDate>Tue, 29 Aug 2023 15:09:15 +0200</lastBuildDate><atom:link href="https://cyberbored.site/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overpass 2</title>
      <link>https://cyberbored.site/posts/overpass/</link>
      <pubDate>Tue, 29 Aug 2023 15:09:15 +0200</pubDate>
      
      <guid>https://cyberbored.site/posts/overpass/</guid>
      <description>Introduction: Today I will be attempting to analyze a packet file for a hacked server.
Requirements: - Linux fundamentals- Network Fundamentals- Wireshark FundamentalsAfter going through the requirements for this lab, we can go ahead and download the file and make sure that the hash given to us is equal to the hash of the file to be sure that the file didn&amp;rsquo;t get tampered with. md5sum of PCAP file:</description>
      <content>&lt;h1 id=&#34;introduction&#34;&gt;Introduction:&lt;/h1&gt;
&lt;p&gt;Today I will be attempting to analyze a packet file for a hacked server.&lt;/p&gt;
&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;- Linux fundamentals
- Network Fundamentals
- Wireshark Fundamentals
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After going through the requirements for this lab, we can go ahead and download the file and make sure that the hash given to us is equal to the hash of the file to be sure that the file didn&amp;rsquo;t get tampered with.
md5sum of PCAP file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;11c3b2e9221865580295bc662c35c6dc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/0.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;I checked the complete hash, and it was compatible with the one given. And now it is time for the fun. I loaded the file into wireshark and made a quick scan to all IP addresses, protocolsâ€¦etc, which I learned from immediately that there was a 3 way handshake to establish a connection between the attacker and the victim on the following url.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/1.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/2.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, I searched for the payload used by filtering http protocols and searching for a post request.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/3.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/4.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/5.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;After checking the http follow stream, I learned that the attacker used netcat to listen to the target &lt;strong&gt;nc 192.168.170.145 4242&lt;/strong&gt; on &lt;strong&gt;port 4242&lt;/strong&gt;, so I started searching for a packet that was sent to &lt;strong&gt;port 4242&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/6.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/7.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;By following the TCP stream, I found the commands and file the attacker used plus the password. I also noticed that there was some users and hash next to them, so using johntheripper I was able to crack the hash and got some passwords that the attacker used.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/8.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/9.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, I searched for the repository that the attacker used &lt;a href=&#34;https://github.com/NinjaJc01/ssh-backdoor/blob/master/main.go&#34;&gt;GitHub Payload&lt;/a&gt;, which helped me find the salt and format used that I used with combination with the hash I found to crack the attacker&amp;rsquo;s password using hashcat.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hashcat&lt;/strong&gt; is a powerful and widely used open-source password recovery and hash cracking tool. It&amp;rsquo;s designed for security professionals, penetration testers, and researchers to assess and evaluate the security of passwords and cryptographic hashes. Hashcat is known for its speed, flexibility, and support for a wide range of hash algorithms and attack methods.&lt;/p&gt;
&lt;p&gt;Using the following command I was able to crack the password:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hashcat -m 1710 -a 0 -o cracked.txt hash.txt /usr/share/wordlists/rockyou.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/10.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;attack-phase&#34;&gt;Attack Phase:&lt;/h1&gt;
&lt;p&gt;After all the information gathered, now it is time to attack back. I used nmap to scan open ports using the following command:
sudo nmap -sC -sV 10.10.145.160 -vv&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/11.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;From wireshark I learned the user&amp;rsquo;s name james, and from the cracked password which allowed me to connect to the target using ssh port 2222.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/12.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;After finding the user flag, I tried to use sudo to navigate to the root file but I wasn&amp;rsquo;t able too, so I started searching between directories for hidden files and I found .suid_bash which from a previous lab I learned that it is used to create a new shell on root privilege and it worked.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/Overpass/13.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Wireshark</title>
      <link>https://cyberbored.site/posts/wireshark101/</link>
      <pubDate>Tue, 29 Aug 2023 14:58:35 +0200</pubDate>
      
      <guid>https://cyberbored.site/posts/wireshark101/</guid>
      <description>Introduction: Wireshark, a renowned application utilized to generate and assess PCAPs (network packet capture files), stands out as a premier packet analysis solution. In this session, we will delve into the fundamentals of Wireshark installation and utilization, focusing on executing elementary packet analysis tasks, while also delving deeply into the intricacies of each prevalent networking protocol.
Collection Methods: -Network Taps are a physical implant in which you physically tap between a cable, these techniques are commonly used by Threat Hunting/DFIR teams and red teams in an engagement to sniff and capture packets.</description>
      <content>&lt;h1 id=&#34;introduction&#34;&gt;Introduction:&lt;/h1&gt;
&lt;p&gt;Wireshark, a renowned application utilized to generate and assess PCAPs (network packet capture files), stands out as a premier packet analysis solution. In this session, we will delve into the fundamentals of Wireshark installation and utilization, focusing on executing elementary packet analysis tasks, while also delving deeply into the intricacies of each prevalent networking protocol.&lt;/p&gt;
&lt;h4 id=&#34;collection-methods&#34;&gt;Collection Methods:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;-Network Taps are a physical implant in which you physically tap between a cable, these techniques are commonly used by Threat Hunting/DFIR teams and red teams in an engagement to sniff and capture packets.

-MAC Floods are a tactic commonly used by red teams as a way of actively sniffing packets. MAC Flooding is intended to stress the switch and fill the CAM (Content Addressable Memory) table. Once the CAM table is filled the switch will no longer accept new MAC addresses and so in order to keep the network alive, the switch will send out packets to all ports of the switch.

-ARP Poisoning is another technique used by red teams to actively sniff packets. By ARP Poisoning you can redirect the traffic from the host(s) to the machine you&#39;re monitoring from. This technique will not stress network equipment like MAC Flooding however should still be used with caution and only if other techniques like network taps are unavailable.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;filtering-captures&#34;&gt;Filtering Captures:&lt;/h1&gt;
&lt;p&gt;Wireshark is a great tool to capture and read through the PCAP, but it can get confusing very fast once you are connected to a network and capture all the traffic. That&amp;rsquo;s where the importance of filtering operators comes in, by using the operators you can narrow down your search field to make it easier and clear for analyzing.&lt;/p&gt;
&lt;h4 id=&#34;filtering-operators&#34;&gt;Filtering operators:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;- and - operators: and/&amp;amp;&amp;amp;
- or - operator: or/||
- equals - operator: eq/==
- not equal - operator: ne/!=
- greater than - operator: gt/&amp;gt;
- less than - operator: it/&amp;lt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;packets&#34;&gt;Packets:&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/0.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;packets are units of data that are transmitted over a network. They contain the actual data being sent along with necessary information for routing and delivering the data to its destination. In the context of cybersecurity, understanding network packets is crucial for analyzing network traffic, identifying security threats, and ensuring the smooth operation of networked systems.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/1.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Address Resolution Protocol (ARP)&lt;/strong&gt; is a fundamental networking protocol used to map an IP address to a physical (MAC) address on a local network. It plays a critical role in enabling communication between devices within the
same subnet.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/2.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;By filtering the protocol to only show me arp protocols, I was able to identify reply packets from the ARP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/3.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can find data and date that the packet was sent in the internet protocol section of the packet.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/4.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/5.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Domain Name System (DNS)&lt;/strong&gt; is a fundamental protocol in computer networking that translates human-readable domain names into IP addresses, making it easier to access resources on the internet.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/6.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hypertext Transfer Protocol (HTTP)&lt;/strong&gt; is a foundational protocol used for transmitting and receiving data over the World Wide Web. It&amp;rsquo;s the protocol that enables communication between web clients (such as web browsers) and web servers.&lt;/p&gt;
&lt;p&gt;Wireshark have some features that helps us analyze the packet information. Statistics is one of Wireshark feature that can help you visualize the packet better.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/7.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;HTTPS, is the same as HTTP but secured running on SSL/TLS. When you have an HTTPS packet that is fully encrypted, you can decrypt the packet if you have the private RSA key.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Edit --&amp;gt; Preference --&amp;gt; Protocol --&amp;gt; TLS --&amp;gt; RSA keys list.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/8.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/wireshark/9.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Active Directory Fundamentals</title>
      <link>https://cyberbored.site/posts/adbasics/</link>
      <pubDate>Tue, 29 Aug 2023 14:45:29 +0200</pubDate>
      
      <guid>https://cyberbored.site/posts/adbasics/</guid>
      <description>Introduction: Active Directory (AD) is a directory service developed by Microsoft that is used to manage and organize resources in a network. It provides a centralized database for managing and authenticating users, computers, printers, and other network resources within a Windows-based network environment. Active Directory is commonly used in enterprise environments to streamline network management and improve security.
A Domain Controller (DC) is a critical component of Microsoft&amp;rsquo;s Active Directory (AD) service.</description>
      <content>&lt;h1 id=&#34;introduction&#34;&gt;Introduction:&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Active Directory (AD)&lt;/strong&gt; is a directory service developed by Microsoft that is used to manage and organize resources in a network. It provides a centralized database for managing and authenticating users, computers, printers, and other network resources within a Windows-based network environment. Active Directory is commonly used in enterprise environments to streamline network management and improve security.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A Domain Controller (DC)&lt;/strong&gt; is a critical component of Microsoft&amp;rsquo;s Active Directory (AD) service. It serves as a central repository for user accounts, security policies, authentication, and other directory-related services in a Windows network environment. The primary role of a Domain Controller is to manage and maintain the Active Directory database, which includes information about users, groups, computers, and other network resources within a specific domain.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Security Group&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Domain Admins&lt;/td&gt;
&lt;td&gt;Users of this group have administrative privileges over the entire domain. By default, they can administer any computer on the domain, including the DCs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Server Operators&lt;/td&gt;
&lt;td&gt;Users in this group can administer Domain Controllers. They cannot change any administrative group memberships.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Backup Operators&lt;/td&gt;
&lt;td&gt;Users in this group are allowed to access any file, ignoring permissions. They are used to perform backups of data on computers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Account Operators&lt;/td&gt;
&lt;td&gt;Users in this group can create or modify other accounts in the domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain Users&lt;/td&gt;
&lt;td&gt;Includes all existing user accounts in the domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain Computers&lt;/td&gt;
&lt;td&gt;Includes all existing computers in the domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Domain Controllers&lt;/td&gt;
&lt;td&gt;Includes all existing DCs on the domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To group users in one place that policies apply to all of them, create organizational unit on Active Directory Users and Computers. By default, Organizational Units are protected from being deleted, to enable deleting option, hover on view tab in Active Directory Users and Computers &amp;ndash;&amp;gt; select Advanced Features. This will unlock the object feature located in properties of the OU that will allow you to turn off the protection.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/adbasics/0.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;delegation&#34;&gt;Delegation:&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Delegation&lt;/strong&gt; in the context of Active Directory refers to the process of assigning specific administrative tasks and responsibilities to non-administrative users or groups. It allows administrators to distribute management duties while maintaining overall control and security over the network environment. Delegation is particularly useful in large organizations where multiple individuals or teams need to manage specific aspects of the Active Directory infrastructure.
Steps to add a Delegate control to a user:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/adbasics/1.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/adbasics/2.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/adbasics/3.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you add the permissions to the specified user, they will have the ability to use the given permissions or commands without needing administrator permissions. Example, using Phillip&amp;rsquo;s account to reset Sophie&amp;rsquo;s account password since she forgot her password using PowerShell.
To reset the password:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt &#39;New Password&#39;) -Verbose.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To reset force the user to reset their password on next login to prevent anyone else from knowing the password:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Set-ADUser -ChangePasswordAtLogon $true -Identity sophie -Verbose.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../images/adbasics/4.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you first create machines on AD they are stored by default on Computers container, it is recommended to separate machines depending on their job in different OUs. Types of OUs categories:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- Workstations are common devices in an Active Directory domain where users log in for work and browsing. Using privileged accounts for logging into workstations is strongly discouraged.
- Servers are the second most common devices in an Active Directory domain, providing services to users or other servers.
- Domain Controllers are essential components in an Active Directory domain, allowing for centralized management. They hold hashed passwords for all user accounts, making them critical and sensitive devices within the network.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;group-policy&#34;&gt;Group Policy:&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Group Policy Objects (GPOs)&lt;/strong&gt; are a powerful feature of Microsoft Windows operating systems that enable administrators to manage and control user and computer configurations in an Active Directory environment. GPOs define specific settings, policies, and preferences that apply to users and computers within a domain. These policies are applied in a hierarchical manner, allowing administrators to maintain consistent configurations and security settings across the network.&lt;/p&gt;
&lt;p&gt;To customize Group Policies, you&amp;rsquo;ll start off by crafting a GPO within the Group Policy Objects section. Afterward, you can establish a connection between this GPO and the specific location where you intend the policies to take effect.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/adbasics/5.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the provided image above, we can observe the existence of 3 GPOs that have been generated. The Default Domain Policy and RDP Policy are buddies with the whole thm.local domain, while the Default Domain Controllers Policy hangs out solely with the Domain Controllers OU. Just a heads-up: any GPO you set up doesn&amp;rsquo;t just do its thing in the linked OU, but also in any baby OUs under it. So, even the Sales OU will catch some of that Default Domain Policy vibe.&lt;/p&gt;
&lt;p&gt;The setting tabs of the any chosen Policy shows us actual GPO content and let us know what specific configurations it applies. To edit the policy configurations, right click the chosen policy &amp;ndash;&amp;gt; Edit &amp;ndash;&amp;gt; Computer/User Configurations.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GPO distribution&lt;/strong&gt; involves using Group Policy Objects (GPOs) in Active Directory to centrally manage settings, security, and software for computers and users across a network. GPOs are typically distributed through something called the SYSVOL folder. It&amp;rsquo;s like a shared hub on domain controllers in our Active Directory setup. This special folder ensures that all our GPO stuff is available and the same across our whole domain.&lt;/p&gt;
&lt;h4 id=&#34;note&#34;&gt;Note:&lt;/h4&gt;
&lt;p&gt;Once a change has been made to any GPOs, it may take some time for computers to catchup. You can force the change to update immediately by running the following command on Windows PowerShell:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gpudate /force.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create and link specific configuration to specific groups, we can create a new GPO in the GPO directory, configure it and then drag and drop it in the groups we want to apply it too.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/adbasics/6.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;authentication&#34;&gt;Authentication:&lt;/h1&gt;
&lt;p&gt;When we are using AD, all credentials are stored in the Domain Controllers. Two major protocols use by windows are:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- Kerberos is a clever security protocol that lets systems verify their identities over networks without sharing passwords directly. It&#39;s all about using tickets and a Key Distribution Center to keep things safe from unauthorized access and eavesdropping.
- NetNTLM is one of those old-school authentication methods. It&#39;s been around for a while and was used in Windows to help users access network stuff without shouting out their passwords. But, just a heads-up, it&#39;s considered kinda outdated now.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;tree-and-forest&#34;&gt;Tree and Forest:&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Tree&lt;/strong&gt; is a hierarchical structure of domains, with a root domain at the top, containing child and sub-child domains. This arrangement streamlines network management and resource organization.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Forest&lt;/strong&gt; is a collection of interconnected Active Directory Trees, sharing a common schema and configuration, suitable for large organizations or collaborations among separate domains.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Network Ports 2</title>
      <link>https://cyberbored.site/posts/netowrkservice2/</link>
      <pubDate>Tue, 29 Aug 2023 14:04:43 +0200</pubDate>
      
      <guid>https://cyberbored.site/posts/netowrkservice2/</guid>
      <description>Brief summary about Network File System: Network File System (NFS) is a distributed file protocol that allows remote access and sharing of files between computers over a network. It enables clients to access files and directories on a remote server as if they were local, making it possible to share data and resources seamlessly across different systems.
A very important tool to consider while using NFS is nfs-common. It includes programs such as: lockd, statd, showmount, nfsstat, gssd, idmapd and mount.</description>
      <content>&lt;h1 id=&#34;brief-summary-about-network-file-system&#34;&gt;Brief summary about Network File System:&lt;/h1&gt;
&lt;p&gt;Network File System (NFS) is a distributed file protocol that allows remote access and sharing of files between computers over a network. It enables clients to access files and directories on a remote server as if they were local, making it possible to share data and resources seamlessly across different systems.&lt;/p&gt;
&lt;p&gt;A very important tool to consider while using NFS is nfs-common. It includes programs such as: lockd, statd, showmount, nfsstat, gssd, idmapd and mount.nfs.&lt;/p&gt;
&lt;p&gt;Note: to install nfs on your system, simply type the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- sudo apt update
- sudo apt install nfs-kernel-server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and to install nfs-common simply add:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- sudo apt install nfs-common.
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;practical&#34;&gt;Practical:&lt;/h1&gt;
&lt;p&gt;As per tradition, I started by scanning the open ports using nmap to do a full port scan.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/0.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/1.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;After finding out the open ports, I saw that port 2049 is running nfs_acl service, which can be used to enumerate our attack. Then I wanted to check the NFS shares list using the showmount command.
Showmount flags:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/2.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/3.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;After finding out the shared directory, I created a mount directory in the tmp file so that it automatically gets deleted after reboot and mounted the directory on the newly created directory.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/4.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/5.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/6.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;After navigating to the mounted directory, I checked for all available files/directories but it appeared that there was not files/directories, so I tried checking for all files/directories including hidden ones and I saw one that caught my attention which is .ssh. As we know from previous lab this file usually contains the private key which could be used to access the target through ssh easily and gain privilege escalation depending on the time of user this refers too.&lt;/p&gt;
&lt;h1 id=&#34;brief-summary-about-root-squash&#34;&gt;Brief summary about Root Squash:&lt;/h1&gt;
&lt;p&gt;Root squash&amp;quot; is a security feature implemented in Network File System (NFS) to enhance the security of file sharing. When root squash is enabled, it prevents the root user (superuser) on the NFS client from exercising root privileges on the NFS server. Instead, any attempts by the root user on the client to access NFS resources are mapped to a less privileged user, typically the &amp;ldquo;nobody&amp;rdquo; user or a similar user with restricted access.&lt;/p&gt;
&lt;p&gt;SUID stands for &amp;ldquo;Set User ID&amp;rdquo; and is a permission bit in Unix-like operating systems that allows users to execute a file with the privileges of the file&amp;rsquo;s owner or group, rather than with their own privileges. When the SUID bit is set on an executable file, it enables users to perform certain actions that they wouldn&amp;rsquo;t normally have the permission to execute.&lt;/p&gt;
&lt;h1 id=&#34;practicaly&#34;&gt;Practicaly:&lt;/h1&gt;
&lt;p&gt;I connected to the target using ssh private key. Then, I installed a script provided by TryHackMe to run on the target and gain privilege escalation Reference. After downloading the file, I simply changed the user permission using chmod +s bash to allow me to be able to execute the file even on a low level privilege account. Because the permissions didn&amp;rsquo;t apply to the other user group, I had to also add the execute permission using chmod +x bash.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/11.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/8.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/12.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/13.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/10.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;brief-summary-about-smtp-pop3-and-imap&#34;&gt;Brief summary about SMTP, POP3, and IMAP:&lt;/h1&gt;
&lt;p&gt;SMTP (Simple Mail Transfer Protocol) is a widely used protocol for sending and receiving emails. It&amp;rsquo;s the standard method by which email clients and servers communicate to deliver messages. SMTP focuses on the transmission of emails, while other protocols like IMAP and POP3 handle the retrieval of emails from a server.&lt;/p&gt;
&lt;p&gt;SMTP operates on port 25, and it works by relaying emails from the sender&amp;rsquo;s mail server to the recipient&amp;rsquo;s mail server. This process involves a series of commands and responses between the sending and receiving servers, ultimately resulting in the successful delivery of the email message.&lt;/p&gt;
&lt;p&gt;POP3 (Post Office Protocol 3) is a protocol used for retrieving emails from a mail server to an email client. Unlike SMTP, which focuses on sending emails, POP3 is responsible for downloading messages from the server to the recipient&amp;rsquo;s device, allowing users to access their emails offline.&lt;/p&gt;
&lt;p&gt;IMAP (Internet Message Access Protocol) is a protocol used for accessing and managing emails stored on a mail server. Unlike POP3, which simply downloads emails to the client, IMAP offers more advanced features that allow users to organize, synchronize, and manage their emails across multiple devices while keeping them stored on the server.&lt;/p&gt;
&lt;h1 id=&#34;practical-1&#34;&gt;Practical:&lt;/h1&gt;
&lt;p&gt;After learning a brief summary about SMTP, POP3, and IMAP, I wanted to start testing and trying to enumerate them on a virtual lab. As the usual ritual, I started by scanning the ports using nmap and found 2 ports opened.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/14.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, after learning about the open ports, I lunched metasploit using msfconsole to attempt finding the current version running. I ran the command search smtp_version and it showed me the following result.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/15.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;After finding the payload I needed, I set it up and executed the payload against the target which got me system mail name and agent that is running .&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/16.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/17.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see in the picture above I found out about the system mail name which is polosmtp.home and Mail Transfer Agent (MTA) PostFix. I had to search on the internet about MTAs to learn that PostFix is an MTA using the following link Reference Link. After finding all the necessary information about the target, I can now start on the next step which is exploiting. I searched for the payload smtp_enum to get the payload directory.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/18.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then started setting up the payload and options necessary for the attack.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/19.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- RHOSTS: The target we want to exploit
- USER_FILE: A file that contains the users we want to search for.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are the options we need to set. The USER_FILE can be found in the seclists directory that contains a lot of built files for usernames, passwords, directoriesâ€¦&lt;/p&gt;
&lt;p&gt;Now all that&amp;rsquo;s left is to get the name of the user.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/20.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now it is time to brute force the password after finding out the username. To get the password we can use hydra to brute force port 22.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/21.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/22.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Which allowed me to get into the target&amp;rsquo;s system and get the flag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/23.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/24.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;brief-summary-about-mysql-rdbms-and-sql&#34;&gt;Brief Summary about MySQL, RDBMS, and SQL:&lt;/h1&gt;
&lt;p&gt;MySQL is an open-source relational database management system (RDBMS) known for its speed, reliability, and ease of use. It is widely used for various applications, from small websites to large enterprise systems, due to its scalability and robust features.&lt;/p&gt;
&lt;p&gt;A Relational Database Management System (RDBMS) is a type of database management system that stores and manages data in a structured manner using tables with predefined relationships. RDBMS is designed to efficiently organize, retrieve, and manipulate data based on the principles of the relational model.&lt;/p&gt;
&lt;p&gt;SQL, which stands for Structured Query Language, is a domain-specific programming language used to manage and manipulate relational databases. SQL is essential for interacting with databases and performing various operations, such as querying, inserting, updating, and deleting data. It provides a standardized way to communicate with relational database management systems (RDBMS).&lt;/p&gt;
&lt;h1 id=&#34;practical-2&#34;&gt;Practical:&lt;/h1&gt;
&lt;p&gt;I scanned first the available ports, and found two open ports 22, and 3306 which is for MySQL.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/25.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Using the provided credentials root:password, I logged into the server to check if it is on and running and I was able to connect. mysql -h 10.10.192.208 -u root -p.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/26.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;To enumerate the open port of mysql we use metasploit. I searched for mysql_sql on msfconsole which gave me this playload auxiliary/admin/mysql/mysql_sql which allows you to excute commands on admin level after you set up the necessary options for the payload.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/27.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/28.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;And as you can see on row 4 SQL allows you to execute commands that you set.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/29.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;And now it is time to exploit the server after finding out all necessary information. I searched for the payload called mysql_schemadump and copy pasted the payload that was given by the search. Then setup the options necessary just like before. What this payload does, is basically dumps all available tables on the server with column names and types since schema is synonymous with a database.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/30.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, I searched for the payload mysql_hashdump to find out the users available with their hashed password.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/31.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finding the hash can be helpful since you can brute force using johntheripper to crack the password, it just takes time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice2/32.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;In my case it didn&amp;rsquo;t take any time, as john was able to get it with minimum effort. Thanks john! The password for carl is doggie. And using the credentials we obtained, I logged into the target using ssh and got the flag.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Network Ports 1</title>
      <link>https://cyberbored.site/posts/networkservice1/</link>
      <pubDate>Sat, 19 Aug 2023 16:30:33 +0200</pubDate>
      
      <guid>https://cyberbored.site/posts/networkservice1/</guid>
      <description>Introduction: Server Message Block(SMB) is a client-server communication protocol used for sharing access to files, printers, serial ports and other resources on a network.
Enum4linux is a tool used to enumerate SMB shares on both Windows and Linux systems. It is basically a wrapper around the tools in the Samba package and makes it easy to quickly extract information from the target pertaining to SMB. This tool is always used after conducting port scan and SMB port is open.</description>
      <content>&lt;h1 id=&#34;introduction&#34;&gt;Introduction:&lt;/h1&gt;
&lt;p&gt;Server Message Block(SMB) is a client-server communication protocol used for sharing access to files, printers, serial ports and other resources on a network.&lt;/p&gt;
&lt;p&gt;Enum4linux is a tool used to enumerate SMB shares on both Windows and Linux systems. It is basically a wrapper around the tools in the Samba package and makes it easy to quickly extract information from the target pertaining to SMB. This tool is always used after conducting port scan and SMB port is open.
The syntax of Enum4linux: enum3linux [flag] ip.
Flags for Enum4linux:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TAG&lt;/th&gt;
&lt;th&gt;FUNCTION&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-U&lt;/td&gt;
&lt;td&gt;Get userlist.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-M&lt;/td&gt;
&lt;td&gt;Get machine list.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-N&lt;/td&gt;
&lt;td&gt;Get namelist dump (different from -U and -M).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-S&lt;/td&gt;
&lt;td&gt;Get sharelist.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-P&lt;/td&gt;
&lt;td&gt;Get password policy information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-G&lt;/td&gt;
&lt;td&gt;Get group and member list.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-a&lt;/td&gt;
&lt;td&gt;All of the above (full basic enumeration).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;practical&#34;&gt;Practical:&lt;/h1&gt;
&lt;p&gt;First, I started by scanning the open ports using nmap.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic0.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then I searched for the group name, OS version, and the machine name using the following command:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic1.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic2.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic3.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;After finding the OS version and important sharenames:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic4.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;Which I used to connect to the target using the group name, share name, and anonymous username:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic5.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;I tried all the available files in the directory by downloading them using get and printing the results inside the file using cat, and the only file I was able to get information from was the Working text file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic6.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic7.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;Which also allowed me to learn that the target was using SSH to connect to the company&amp;rsquo;s network from his home due to the pandemic. After gathering this information, I navigated to a directory called .ssh which contained few important files.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic8.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;After downloading the file id_rsa and moving it to the .ssh file and then using the more command to access the name of the target through the id_rsa.pub file, which is cactus.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic9.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic10.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic11.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic12.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;After getting the name and the private key, I accessed the target through ssh and immediately found the flag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic13.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;brief-summary-about-telnet&#34;&gt;Brief Summary about Telnet:&lt;/h1&gt;
&lt;p&gt;Telnet is a network protocol that allows users to establish a command-line connection to a remote device over a network. A key note to keep in mind about Telnet is that it runs its transmitted packets unencrypted, which makes it easy and simple to capture and read all the plain text packets. Best practice is to replace Telnet with the more secure option SSH. Telnet can be run using the following command: &amp;rsquo;telnet[ip][port]&#39;&lt;/p&gt;
&lt;h1 id=&#34;practical-1&#34;&gt;Practical:&lt;/h1&gt;
&lt;p&gt;I started by scanning the target using nmap to check for open ports, but I wasn&amp;rsquo;t able to find any of the 1000 well known ports opened.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic14.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic15.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;So I switched to a different flag, which is the all port scanning flag to get a wider range of ports to scan, which found 1 port opened that I have never seen before.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic16.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic17.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;I tried figuring out what this service was used for, but it was a little bit of a brain scratch so I searched up port 8012 to learn what is it used for and apparently it is used for a trojan or a backdoor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic18.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;So I scanned again the port using nmap, but only port 8012 to get detailed information about it and its version.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic19.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic20.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;I learned from the scan that it is called SKIDY&amp;rsquo;S BACKDOOR. After learning these information, I used the opened port 8012 to connect to the target machine using telnet, and it immediately I was in, but all commands I input doesn&amp;rsquo;t return any output. I ran tcpdump in the background to listen to any ICMP message and used ping to check if the target is active.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic21.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic22.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic23.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;Since the machine is online and reachable, I am able to execute commands. Which why I used msfvenom to generate a reverse shell payload.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic24.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;â€¢ -p = payload.
â€¢ lhost = our local host IP address (this is your machine&#39;s IP address).
â€¢ lport = the port to listen on (this is the port on your machine).
â€¢ R = export the payload in raw format.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, using netcat to listen to port 4444, I connected again to the target using telnet and ran the command that msfvenom generated to gain access to the target and get the flag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic25.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic26.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic27.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;brief-summary-about-ftp&#34;&gt;Brief Summary about FTP:&lt;/h1&gt;
&lt;p&gt;File Transfer Protocol is a standard network protocol used for transferring files between a client and a server on a computer network. FTP allows users to authenticate themselves using a username and password to access files stored on a remote server. While FTP is convenient for file sharing, it has security vulnerabilities, such as transmitting data, including login credentials, in plain text. To address these security concerns, Secure FTP (SFTP) and FTPS (FTP Secure) protocols have been developed, which provide encryption and enhanced security for file transfers.&lt;/p&gt;
&lt;h1 id=&#34;practical-2&#34;&gt;Practical:&lt;/h1&gt;
&lt;p&gt;For the FTP practical lab, as tradition I scanned the target ports using nmap to find open ports, and only 2 ports were available 21 and 80. We can see that there is a file called PUBLIC_NOTICE.txt on FTP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/pic28.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/29.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/30.png&#34; alt=&#34;Shell&#34;&gt;
And using ftp, I connected to the target using anonymous username and downloaded the file that was available.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/31.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;But it isn&amp;rsquo;t really useful, I needed to gain privilege escalation on the target.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Hydra is a very fast online password cracking tool, which can perform rapid dictionary attacks against more than 50 Protocols, including Telnet, RDP, SSH, FTP, HTTP, HTTPS, SMB, several databases and much more. Hydra comes by default on both Parrot and Kali, however if you need it, you can find the GitHub here.&lt;/p&gt;
&lt;p&gt;Some important flags that we will use:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Section&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;hydra&lt;/td&gt;
&lt;td&gt;Runs the hydra tool.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-t 4&lt;/td&gt;
&lt;td&gt;Number of parallel connections per target.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-l [user]&lt;/td&gt;
&lt;td&gt;Points to the user who&amp;rsquo;s account you are trying to compromise.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-P[path to dictionary]&lt;/td&gt;
&lt;td&gt;Points to the file containing the list of possible passwords.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-vV&lt;/td&gt;
&lt;td&gt;Sets verbose mode to very verbose, shows the login+pass combination for each attempt.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[machine IP]&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ftp / protocol&lt;/td&gt;
&lt;td&gt;Set the protocol.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/32.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;By simply setting up the username number of parallel connections, path of the password lists, verberose to be able to see the passwords used, IP address of the target and protocol we want to run it on, hydra tool started spraying passwords on FTP username mike and I just waited for the tool to find the correct password. Depending on your device it might take some time. Fortunately for me, mike had an easy and well-known password. For the next step, I used the new found credentials to login to the target and gain access.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/33.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/networkservice/34.png&#34; alt=&#34;Shell&#34;&gt;&lt;/p&gt;
&lt;p&gt;And I finally gained the final flag, which allowed me to complete the room.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Nmap</title>
      <link>https://cyberbored.site/posts/nmap/</link>
      <pubDate>Tue, 15 Aug 2023 14:43:22 +0200</pubDate>
      
      <guid>https://cyberbored.site/posts/nmap/</guid>
      <description>Embarking on a new Nmap project today, I&amp;rsquo;m diving into the realm of testing and exploring device scanning.
To kick things off, it&amp;rsquo;s fascinating to note that every network-enabled computer boasts a whopping 65535 open ports. Out of these, 1024 are well-known ports that add an intriguing layer to our journey.
Key flags to keep in mind:
Flags Description -sS Half-open or stealth scan, which has similar function to TCP scan.</description>
      <content>&lt;p&gt;Embarking on a new Nmap project today, I&amp;rsquo;m diving into the realm of testing and exploring device scanning.&lt;/p&gt;
&lt;p&gt;To kick things off, it&amp;rsquo;s fascinating to note that every network-enabled computer boasts a whopping 65535 open ports. Out of these, 1024 are well-known ports that add an intriguing layer to our journey.&lt;/p&gt;
&lt;p&gt;Key flags to keep in mind:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Flags&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-sS&lt;/td&gt;
&lt;td&gt;Half-open or stealth scan, which has similar function to TCP scan. Key difference between the two scan is that TCP scan performs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-sT&lt;/td&gt;
&lt;td&gt;TCP connect scans, which performs 3-way handshake.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-sU&lt;/td&gt;
&lt;td&gt;UDP connect scans, which doesn&amp;rsquo;t rely on the handshake.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-sN&lt;/td&gt;
&lt;td&gt;NULL scans, TCP request is sent with no flag set at all, and receives RST if port is closed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-sX&lt;/td&gt;
&lt;td&gt;Xmas scans, sends malformed TCP packet and expects RST response for closed ports. It is called Xmas, as it sends(PSH, URG and FIN) which give it the appearance of a blinking Christmas tree.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-sF&lt;/td&gt;
&lt;td&gt;FIN scans, similar to the NULL scan, but sends with a FIN flag.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-O&lt;/td&gt;
&lt;td&gt;Detects which operating system the target is running.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-sV&lt;/td&gt;
&lt;td&gt;Detects the version of the services running on the target.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-v, vv, vvv&lt;/td&gt;
&lt;td&gt;Verbosity is used to scan with in depth details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-oA&lt;/td&gt;
&lt;td&gt;Outputs Nmap results in three major formats.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-oN&lt;/td&gt;
&lt;td&gt;Saves Nmap results in normal format.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-oG&lt;/td&gt;
&lt;td&gt;Saves Nmap results in gerpable format.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-A&lt;/td&gt;
&lt;td&gt;Aggressive mode, which activates service detection, operating system, traceroute, and script scanning.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-T1-5&lt;/td&gt;
&lt;td&gt;Timer template from level 1-5.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td&gt;Port scan, can be used to specify the ports to be scanned.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-p-&lt;/td&gt;
&lt;td&gt;All ports scan, as the name suggest it scans all open ports.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;script&lt;/td&gt;
&lt;td&gt;Activates Nmap scripts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-sn&lt;/td&gt;
&lt;td&gt;Ping sweep, depends on ICMP message, which is sent to all specified IP addresses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-Pn&lt;/td&gt;
&lt;td&gt;Tells Nmap to scan without pinging the target in other words Nmap assumes that the target is alive.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-f&lt;/td&gt;
&lt;td&gt;Used to fragment the packets.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;mtu &lt;!-- raw HTML omitted --&gt;&lt;/td&gt;
&lt;td&gt;Similar to the use of fragmented packet, but allows you to control the size of the packet.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;scan-delay &lt;!-- raw HTML omitted --&gt;ms&lt;/td&gt;
&lt;td&gt;Used to add a delay between packets sent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;badsum&lt;/td&gt;
&lt;td&gt;Used to generate in invalid checksum for packets. However, firewalls might respond automatically, without bothering to check the checksum of the packet. Which allows this flag to check the presence of firewall/IDS.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The Nmap Scripting Engine (NSE) serves as a potent augmentation to Nmap, significantly expanding its capabilities. Written in the Lua programming language, NSE Scripts empower a wide spectrum of functionalities, ranging from vulnerability scanning to automated exploit deployment. While its applications are diverse, NSE&amp;rsquo;s remarkable utility lies in reconnaissance, yet it&amp;rsquo;s crucial to acknowledge the extensive script library at play.&lt;/p&gt;
&lt;p&gt;The NSE scripts can be classified into different categories:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;â€¢ safe: Won&#39;t affect the target
â€¢ intrusive: Not safe: likely to affect the target
â€¢ vuln: Scan for vulnerabilities
â€¢ exploit: Attempt to exploit a vulnerability
â€¢ auth: Attempt to bypass authentication for running services (e.g. Log into an FTP server anonymously)
â€¢ brute: Attempt to brute force credentials for running services
â€¢ discovery: Attempt to query running services for further information about the network (e.g. query an SNMP server).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For instance, to execute a script, use the command &amp;lsquo;&amp;ndash;script=&lt;!-- raw HTML omitted --&gt;&amp;rsquo; or &amp;lsquo;&amp;ndash;script=vuln&amp;rsquo;. Multiple scripts can run concurrently with a command like &amp;lsquo;&amp;ndash;script=smb-enum-users,smb-enum-shares&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Certain scripts require arguments, such as credentials for authenticated vulnerabilities, which can be provided using the &amp;ndash;script-args Nmap switch. Example: &amp;rsquo;nmap -p 80 &amp;ndash;script http-put &amp;ndash;script-args http-put.url=&amp;rsquo;/dav/shell.php&amp;rsquo;,http-put.file=&amp;rsquo;./shell.php&amp;rsquo;&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;For further assistance with scripts, utilize &amp;rsquo;nmap &amp;ndash;script-help &lt;!-- raw HTML omitted --&gt;&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Nmap offers a formatted text file detailing filenames and categories for available scripts, which can be located at &amp;lsquo;/usr/share/nmap/scripts/script.db&amp;rsquo;. To search for scripts, you can use commands like &amp;lsquo;grep &amp;ldquo;gtp&amp;rdquo; /usr/share/nmap/scripts/script.db&amp;rsquo; or &amp;rsquo;ls -l /usr/share/nmap/scripts/&lt;em&gt;ftp&lt;/em&gt;&amp;rsquo;. Comprehensive scripts and libraries can be explored via this reference: &lt;a href=&#34;https://nmap.org/nsedoc/&#34;&gt;https://nmap.org/nsedoc/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To install/update the script list, consider these approaches:&lt;/p&gt;
&lt;p&gt;1-Run &amp;lsquo;sudo apt update &amp;amp;&amp;amp; sudo apt install nmap&amp;rsquo;.
2-Use &amp;lsquo;sudo wget -O /usr/share/nmap/scripts/&lt;!-- raw HTML omitted --&gt;.nse &lt;a href=&#34;https://svb.nmap.org/nmap/scripts/&#34;&gt;https://svb.nmap.org/nmap/scripts/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;.nse&amp;rsquo;, followed by &amp;rsquo;nmap &amp;ndash;script-updatedb&amp;rsquo;.&lt;/p&gt;
&lt;h1 id=&#34;practical-lab&#34;&gt;Practical Lab:&lt;/h1&gt;
&lt;p&gt;To initiate, I commenced by sending a ping to the target using the command &amp;lsquo;ping -c 5 10.10.239.246&amp;rsquo;. The purpose was to discern if the target would reciprocate with an ICMP responseâ€”a standard practice in network diagnostics. Subsequently, I employed &amp;lsquo;ping -h&amp;rsquo; to explore the array of available flags. Notably, the -c flag came into play, dictating the halt of pinging after five responses were received from the target. This parameter was selected to govern the desired extent of the ping operation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/nmap/pic0.png&#34; alt=&#34;Xmas scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;Based on the displayed outcomes, it was evident that the target did not acknowledge the receipt of packets. Moving forward, I conducted an assessment to determine the status of the first 999 ports through an Xmas scan. The endeavor involved specifying the range of ports to be examined using the &amp;lsquo;-p&amp;rsquo; flag.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/nmap/pic1.png&#34; alt=&#34;TCP scan&#34;&gt;&lt;/p&gt;
&lt;p&gt;The scan revealed the ports in an open but disregarded state. Subsequently, I identified an issue with my openvpn setup, which was rectified by generating a fresh openvpn configuration file via TryHackMe. With the hurdle overcome, I proceeded to re-execute the nmap scans for open ports, this time employing a TCP scan. The result brought to light the presence of 5 accessible ports:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/nmap/pic2.png&#34; alt=&#34;Script&#34;&gt;&lt;/p&gt;
&lt;p&gt;Concluding the process, I harnessed &amp;rsquo;nmap &amp;ndash;script&amp;rsquo; to scrutinize port 21 FTP, assessing its potential for facilitating access to the target. As a culmination, I successfully employed the anonymous username to establish a login into the target&amp;rsquo;s FTP server.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/nmap/pic3.png&#34; alt=&#34;result&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/nmap/pic4.png&#34; alt=&#34;login&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/nmap/pic5.png&#34; alt=&#34;login&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
